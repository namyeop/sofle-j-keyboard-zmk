#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
            &kp GRAVE         &kp N1            &kp N2                  &kp N3        &kp N4     &kp N5     &mmv MOVE_UP     &kp N6  &kp N7    &kp N8     &kp N9                &kp N0     &kp MINUS
            &kp TAB           &kp Q             &kp W                   &kp E         &kp R      &kp T      &mmv MOVE_DOWN   &kp Y   &kp U     &kp I      &kp O                 &kp P      &kp BACKSPACE
            &kp LEFT_CONTROL  &kp A             &kp S                   &kp D         &kp F      &kp G      &mmv MOVE_LEFT   &kp H   &kp J     &kp K      &kp L                 &kp SEMI   &kp ENTER
            &mt LSHFT ESC     &kp Z             &kp X                   &kp C         &kp V      &kp B      &mmv MOVE_RIGHT  &kp N   &kp M     &kp COMMA  &kp DOT               &kp FSLH   &kp RIGHT_SHIFT
            &to 3             &kp (LSHIFT LALT) &kp (LSHIFT LGUI LCTRL) &kp LEFT_ALT  &kp SPACE  &lt 1 F18  &mkp LCLK        &mo 2   &kp RGUI  &mt (LGUI LALT LCTRL LSHIFT) F18 &kp RCTL   &kp (RGUI RCTRL)
            >;

            sensor-bindings = <&scroll_encoder>;
            display-name = "main";
        };

        layer_1 {
            bindings = <
            &kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &kp UP_ARROW  &kp F6           &kp F7           &kp F8            &kp F9             &kp EQUAL             &kp F10
            &trans      &kp GRAVE        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &kp DOWN      &kp PG_UP        &kp END          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp NON_US_BACKSLASH  &kp F11
            &trans      &kp TILDE        &trans          &trans           &trans           &mkp MB5           &kp LEFT      &kp PG_DN        &kp LEFT         &kp DOWN          &kp RIGHT          &kp SQT               &kp F12
            &trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &kp RIGHT     &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT        &kp F11            &kp F12               &trans
            &kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &kp ENTER     &trans           &trans           &trans            &trans             &trans
            >;

            display-name = "function";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
            &kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
            &trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans  &kp F11     &kp F12    &kp UNDER    &kp PLUS
            &trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans  &trans  &trans      &trans     &kp LBRC     &kp RBRC
            &trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
            &trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &trans  &trans      &trans     &trans
            >;

            display-name = "media";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
            &kp GRAVE       &kp N1            &kp N2                  &kp N3        &kp N4     &kp N5     &mmv MOVE_UP     &kp N6  &kp N7    &kp N8     &kp N9                &kp N0       &kp MINUS
            &kp TAB         &kp Q             &kp W                   &kp E         &kp R      &kp T      &mmv MOVE_DOWN   &kp Y   &kp U     &kp I      &kp O                 &kp P        &kp BACKSPACE
            &kp LGUI        &kp A             &kp S                   &kp D         &kp F      &kp G      &mmv MOVE_LEFT   &kp H   &kp J     &kp K      &kp L                 &kp SEMI     &kp ENTER
            &mt LSHFT ESC   &kp Z             &kp X                   &kp C         &kp V      &kp B      &mmv MOVE_RIGHT  &kp N   &kp M     &kp COMMA  &kp DOT               &kp FSLH     &kp RIGHT_SHIFT
            &to 0           &kp (LSHIFT LALT) &kp (LSHIFT LGUI LCTRL) &kp LEFT_ALT  &kp SPACE  &lt 1 F18  &mkp LCLK        &mo 2   &kp RCTL  &mt (RGUI RALT RCTRL RSHIFT) F18 &kp RCTL     &kp (RGUI RCTRL)
            >;

            sensor-bindings = <&scroll_encoder>;
            display-name = "windows";
        };
    };
};
